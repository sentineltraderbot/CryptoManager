parameters:
  environment: ''
  azureSubscription: ''
  webAppName: ''
  sqlServerName: ''
  databaseName: ''

jobs:
  - job: waitForValidation
    displayName: Review to continue
    pool: server
    timeoutInMinutes: 120
    steps:
      - task: ManualValidation@0
        timeoutInMinutes: 60
        inputs:
          instructions: 'Please validate the build configuration and reject'
          onTimeout: 'reject'

  - job: DeployTest
    dependsOn: waitForValidation
    displayName: 'Deploy Code'
    timeoutInMinutes: 60
    cancelTimeoutInMinutes: 1
    continueOnError: false
    pool:
      vmImage: windows-2019

    steps:
      - checkout: self
        clean: true

      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          artifactName: 'drop'
          itemPattern: 'drop/**'
          downloadPath: '$(build.artifactstagingdirectory)'

      # - task: PowerShell@2
      #   displayName: 'Run SQL Scripts'
      #   inputs:
      #     targetType: 'inline'
      #     script: |
      #       $sqlFiles = Get-ChildItem -Path "$(Build.ArtifactStagingDirectory)/drop" -Filter "*.sql" | Sort-Object Name
      #       foreach ($file in $sqlFiles) {
      #         Write-Host "Executing: $($file.FullName)"
      #         sqlcmd -S tcp:${{ parameters.sqlServerName }},1433 -d ${{ parameters.databaseName }} -G -i $file.FullName
      #       }

      - task: AzureCLI@2
        displayName: 'Run SQL Scripts using MSI'
        inputs:
          azureSubscription: ${{ parameters.azureSubscription }}
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: |
            $resourceURI = "https://database.windows.net/"
            $accessToken = (az account get-access-token --resource=$resourceURI --query accessToken --output tsv)
            $sqlServer = "${{ parameters.sqlServerName }}"
            $database = "${{ parameters.databaseName }}"

            sqlcmd -S $sqlServer -d $database -G -U "" -P "" -Q "SELECT GETDATE();"

      # $sqlFiles = Get-ChildItem -Path "$(Build.ArtifactStagingDirectory)/drop" -Filter "*.sql" | Sort-Object Name
      # foreach ($file in $sqlFiles) {
      #     Write-Host "Executing: $($file.FullName)"

      #     sqlcmd -S $sqlServer -d $database -G -U "ManagedIdentity" -i $file.FullName
      # }

      - task: FileTransform@1
        displayName: 'File transformation: appsettings.json'
        inputs:
          folderPath: '$(Build.ArtifactStagingDirectory)/drop/CryptoManager.WebApi.zip'
          targetFiles: '**/appsettings.json'
          fileType: json

      - task: AzureRmWebAppDeployment@4
        displayName: 'Azure App Service Deploy'
        inputs:
          azureSubscription: ${{ parameters.azureSubscription }}
          appType: webAppLinux
          WebAppName: 'app-${{ parameters.webAppName }}-${{ parameters.environment }}-eun'
          packageForLinux: '$(build.artifactstagingdirectory)/drop/CryptoManager.WebApi.zip'
          enableCustomDeployment: true
          ExcludeFilesFromAppDataFlag: false
          RenameFilesFlag: false
